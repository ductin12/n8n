{
  "active": false,
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "Get Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tasks": {
      "ai_tool": [
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Contacts": {
      "ai_tool": [
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Email": {
      "ai_tool": [
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Voice or Text": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Voice File": {
      "main": [
        [
          {
            "node": "Audio to text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Listen for incoming events": {
      "main": [
        [
          {
            "node": "Voice or Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Angie, AI Assistant üë©üèª‚Äçüè´": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Voice or Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram3": {
      "main": [
        []
      ]
    },
    "Audio to text": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Angie, AI Assistant üë©üèª‚Äçüè´",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        []
      ]
    }
  },
  "createdAt": "2025-03-03T15:46:15.661Z",
  "id": "o0QzHZ4LWQcmdIsU",
  "meta": {
    "templateId": "2462",
    "templateCredsSetupCompleted": true
  },
  "name": "Angie, Personal AI Assistant with Telegram Voice and Text",
  "nodes": [
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "derekcheungsa@gmail.com",
          "cachedResultName": "derekcheungsa@gmail.com"
        },
        "options": {
          "timeMin": "={{$fromAI(\"date\",\"the date after which to fetch the messages in format YYYY-MM-DDTHH:MM:SS\")}}",
          "fields": "=items(summary, start(dateTime))"
        }
      },
      "id": "c70236ea-91ab-4e47-b6f6-63a70ede5d3c",
      "name": "Google Calendar",
      "type": "n8n-nodes-base.googleCalendarTool",
      "position": [
        2000,
        700
      ],
      "typeVersion": 1.1,
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "Pyke8xnyLoJEDNkk",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Voice or Text').item.json.sessionId }}"
      },
      "id": "d2287bea-de47-4180-8ee6-55d4ab1a89da",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        1760,
        680
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "operation": "getAll",
        "filters": {
          "labelIds": [
            "INBOX",
            "UNREAD"
          ],
          "readStatus": "unread",
          "receivedAfter": "={{$fromAI(\"date\",\"the date after which to fetch the messages in format YYYY-MM-DDTHH:MM:SS\")}}"
        }
      },
      "id": "fa955731-86f6-4e4d-8604-dab5f52dee87",
      "name": "Get Email",
      "type": "n8n-nodes-base.gmailTool",
      "position": [
        1880,
        700
      ],
      "typeVersion": 2.1,
      "webhookId": "2b51b15a-f8ba-4092-8388-716ff9aa39ef",
      "credentials": {
        "gmailOAuth2": {
          "id": "25tMkfYULzN1Pay4",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "46511f47-1687-4cbe-ae41-ceb205ed1f11",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1480,
        640
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "B47JGnA0JV3XsTiq",
          "name": "Openrouter account 01"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "64fe44db-af19-43eb-9ff1-de0a72a9e645",
      "name": "Listen for incoming events",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        680,
        300
      ],
      "webhookId": "322dce18-f93e-4f86-b9b1-3305519b7834",
      "typeVersion": 1,
      "credentials": {
        "telegramApi": {
          "id": "vJqray7vnh0AFZMR",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Listen for incoming events').first().json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "Markdown"
        }
      },
      "id": "e35c04ff-a050-4564-8c1b-5b22b556872f",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        2360,
        360
      ],
      "typeVersion": 1.1,
      "webhookId": "7496a3e7-03c6-4b97-b945-bae37229c02f",
      "credentials": {
        "telegramApi": {
          "id": "vJqray7vnh0AFZMR",
          "name": "Telegram account"
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "a0bf9719-4272-46f6-ab3b-eda6f7b44fd8",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json?.message?.text || $json.chatInput }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e791d4f8-2c19-4c14-a71e-39a04f22e944",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        1100,
        380
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "text",
              "stringValue": "={{ $json?.message?.text || $json.chatInput }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b67a2a93-517b-469e-aaa4-32c422710743",
      "name": "Voice or Text",
      "type": "n8n-nodes-base.set",
      "position": [
        880,
        380
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $('Listen for incoming events').item.json.message.voice.file_id }}"
      },
      "id": "8105c39f-9e87-44c4-9215-b3777f0b4164",
      "name": "Get Voice File",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1300,
        100
      ],
      "typeVersion": 1.1,
      "webhookId": "ffb3476b-c07f-4d36-a945-114c30be7d20",
      "credentials": {
        "telegramApi": {
          "id": "vJqray7vnh0AFZMR",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=You are a helpful assistant.\n\nToday's date is {{ $now }}.\n\nGuidelines:\n- When fetching emails, filter out any promotional emails. \n- When summarizing emails, include Sender, Message date, subject, and brief summary of email.\n- if the user did not specify a date in the request assume they are asking for today\n- Use baserow tool to answer questions about tasks\n- When answering questions about calendar events, filter out events that don't apply to the question.  For example, the question is about events for today, only reply with events for today. Don't mention future events if it's more than 1 week away",
          "returnIntermediateSteps": false
        }
      },
      "id": "759b975f-d17c-4386-a5b3-12413f0361f4",
      "name": "Angie, AI Assistant üë©üèª‚Äçüè´",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        1760,
        380
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "content": "## Process Telegram Request\n",
        "height": 278.75,
        "width": 496.25,
        "color": 5
      },
      "id": "5537c777-f003-4673-b48a-4993a0c10520",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1020,
        280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "databaseId": 178833,
        "tableId": 438970,
        "additionalOptions": {}
      },
      "id": "40e92679-b47a-4213-bb23-3f8d086459f2",
      "name": "Tasks",
      "type": "n8n-nodes-base.baserowTool",
      "position": [
        2120,
        700
      ],
      "typeVersion": 1,
      "credentials": {
        "baserowApi": {
          "id": "NY82svFrX1cMDCwq",
          "name": "Baserow account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Useful for getting contact information.  For example emails or phone numbers.",
        "databaseId": 178833,
        "tableId": 463045,
        "additionalOptions": {}
      },
      "id": "570a0647-b571-4ebc-9dfe-40244b5a0b2a",
      "name": "Contacts",
      "type": "n8n-nodes-base.baserowTool",
      "position": [
        2240,
        700
      ],
      "typeVersion": 1,
      "credentials": {
        "baserowApi": {
          "id": "NY82svFrX1cMDCwq",
          "name": "Baserow account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Start here: Step-by Step Youtube Tutorial :star:\n\n[![Building an AI Personal Assistant](https://img.youtube.com/vi/pXjowPc6V2s/sddefault.jpg)](https://youtu.be/pXjowPc6V2s)\n",
        "height": 389.78268107403096,
        "width": 386.9292441979969,
        "color": 5
      },
      "id": "7fb1d95a-a8d6-4040-9271-5197296be7da",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        20,
        160
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        680,
        520
      ],
      "id": "20735161-f252-4caa-8e62-11d0457b513e",
      "name": "When chat message received",
      "webhookId": "f29b4007-80f2-48f1-9917-2f95cf2d435f"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json?.message?.voice?.file_id || $json.message.audio.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        740,
        0
      ],
      "id": "9781ef51-b769-42e4-998d-b96eaec31b0b",
      "name": "Telegram3",
      "webhookId": "bcd523f2-46d3-4a6e-b1c7-8c4c039d3063",
      "credentials": {
        "telegramApi": {
          "id": "vJqray7vnh0AFZMR",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.cloudflare.com/client/v4/accounts/8fb50b38f91243ef6e3345bd97501448/ai/run/@cf/openai/whisper",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1440,
        100
      ],
      "id": "25189518-214a-4bbf-9285-57f94bf8ca94",
      "name": "Audio to text",
      "credentials": {
        "httpHeaderAuth": {
          "id": "2PyMtpuCf6Rf9bu0",
          "name": "Header Auth Cloudflare Worker AI"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "90ea84d5-a6d6-4858-8f91-70ee867ef4e7",
              "name": "message.text",
              "value": "=This is the text of the audio file the user sent to you: {{ $json.result.text }}. \n\nExcuse the user's request and reply by audio for user.  ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1580,
        100
      ],
      "id": "f874a218-07bd-400c-b8ee-3752c0292cb7",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.0-flash-exp",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1280,
        640
      ],
      "id": "26f8d1d2-9be3-4bd3-a588-2ff34a1623ec",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "2n4TLSNuOIYkltQc",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "model": "google/learnlm-1.5-pro-experimental:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        1600,
        640
      ],
      "id": "a203c2c9-b81c-48db-a377-d3796484ef37",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "A2KcMTn8IUXdZGVS",
          "name": "OpenRouter account 2"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "04a73eb8-f974-4b6f-8677-0c4b9f536ca1",
              "name": "response",
              "value": "success",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2140,
        380
      ],
      "id": "8fca8247-50d2-4433-8090-7bcc0b365699",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\"format_final_response\":[\n  {\n  \"text\": \"string\"\n  }\n  ]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2400,
        600
      ],
      "id": "10a92c70-5a32-47ac-b2c4-a6583602a785",
      "name": "Structured Output Parser"
    }
  ],
  "pinData": {},
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-03-13T04:54:36.000Z",
  "versionId": "5f04b3a8-b30e-4fd0-8692-56820960f65d"
}